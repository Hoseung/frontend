{
    "directed": true,
    "multigraph": false,
    "graph": {},
    "nodes": [
      {
        "depth": 9,
        "value": null,
        "label": "(mean((... \u00d7 ...)) + mean(...))",
        "type": "<class 'compyler.cipher_node.FreeNode'>",
        "root": true,
        "id": 1
      },
      {
        "isexecuted": false,
        "result": null,
        "depth": 0,
        "label": "+",
        "root": false,
        "type": "<class 'compyler.operations.Addition'>",
        "id": 2
      },
      {
        "depth": 7,
        "value": null,
        "label": "mean(...)",
        "root": false,
        "type": "<class 'compyler.cipher_node.FreeNode'>",
        "id": 3
      },
      {
        "depth": 8,
        "value": null,
        "label": "mean((... \u00d7 ...))",
        "root": false,
        "type": "<class 'compyler.cipher_node.FreeNode'>",
        "id": 4
      },
      {
        "depth": 0,
        "label": "mean",
        "root": false,
        "type": "<class 'compyler.operations.Mean'>",
        "id": 5
      },
      {
        "depth": 0,
        "label": "mean",
        "root": false,
        "type": "<class 'compyler.operations.Mean'>",
        "id": 6
      },
      {
        "depth": 6,
        "value": null,
        "label": "(((... \u00d7 ...) \u00d7 (negate((... \u00d7 ...)) + 2)) \u00d7 (negate(((... \u00d7 ...) \u00d7 (negate((... \u00d7 ...)) + 2))) + 2))",
        "root": false,
        "type": "<class 'compyler.cipher_node.FreeNode'>",
        "id": 7
      },
      {
        "depth": 7,
        "value": null,
        "label": "(... \u00d7 ...)",
        "root": false,
        "type": "<class 'compyler.cipher_node.FreeNode'>",
        "id": 8
      },
      {
        "isexecuted": false,
        "result": null,
        "depth": 0,
        "label": "\u00d7",
        "scale_trick": true,
        "root": false,
        "type": "<class 'compyler.operations.Multiplication'>",
        "id": 9
      },
      {
        "isexecuted": false,
        "result": null,
        "depth": 0,
        "label": "\u00d7",
        "scale_trick": true,
        "root": false,
        "type": "<class 'compyler.operations.Multiplication'>",
        "id": 10
      },
      {
        "depth": 7,
        "value": null,
        "label": "(negate(((... \u00d7 ...) \u00d7 (negate((... \u00d7 ...)) + 2))) + 2)",
        "root": false,
        "type": "<class 'compyler.cipher_node.FreeNode'>",
        "id": 11
      },
      {
        "depth": 5,
        "value": null,
        "label": "((... \u00d7 ...) \u00d7 (negate((... \u00d7 ...)) + 2))",
        "root": false,
        "type": "<class 'compyler.cipher_node.FreeNode'>",
        "id": 12
      },
      {
        "depth": 8,
        "value": null,
        "label": "(negate(...) + 2)",
        "root": false,
        "type": "<class 'compyler.cipher_node.FreeNode'>",
        "id": 13
      },
      {
        "depth": 6,
        "value": null,
        "label": "(((... \u00d7 ...) \u00d7 (negate((... \u00d7 ...)) + 2)) \u00d7 (negate(((... \u00d7 ...) \u00d7 (negate((... \u00d7 ...)) + 2))) + 2))",
        "root": false,
        "type": "<class 'compyler.cipher_node.FreeNode'>",
        "id": 14
      },
      {
        "isexecuted": false,
        "result": null,
        "depth": 0,
        "label": "+",
        "root": false,
        "type": "<class 'compyler.operations.Addition'>",
        "id": 15
      },
      {
        "isexecuted": false,
        "result": null,
        "depth": 0,
        "label": "\u00d7",
        "scale_trick": true,
        "root": false,
        "type": "<class 'compyler.operations.Multiplication'>",
        "id": 16
      },
      {
        "isexecuted": false,
        "result": null,
        "depth": 0,
        "label": "+",
        "root": false,
        "type": "<class 'compyler.operations.Addition'>",
        "id": 17
      },
      {
        "isexecuted": false,
        "result": null,
        "depth": 0,
        "label": "\u00d7",
        "scale_trick": true,
        "root": false,
        "type": "<class 'compyler.operations.Multiplication'>",
        "id": 18
      },
      {
        "depth": 6,
        "value": null,
        "label": "negate(((... \u00d7 ...) \u00d7 (negate((... \u00d7 ...)) + 2)))",
        "root": false,
        "type": "<class 'compyler.cipher_node.FreeNode'>",
        "id": 19
      },
      {
        "depth": 0,
        "value": 2,
        "label": "2",
        "params": {
          "scale": null,
          "min_scale": null,
          "level": null
        },
        "root": false,
        "type": "<class 'compyler.cipher_node.PlainNode'>",
        "id": 20
      },
      {
        "depth": 4,
        "value": null,
        "label": "(... \u00d7 ...)",
        "root": false,
        "type": "<class 'compyler.cipher_node.FreeNode'>",
        "id": 21
      },
      {
        "depth": 6,
        "value": null,
        "label": "(negate((... \u00d7 ...)) + 2)",
        "root": false,
        "type": "<class 'compyler.cipher_node.FreeNode'>",
        "id": 22
      },
      {
        "depth": 7,
        "value": null,
        "label": "negate(...)",
        "root": false,
        "type": "<class 'compyler.cipher_node.FreeNode'>",
        "id": 23
      },
      {
        "depth": 0,
        "value": 2,
        "label": "2",
        "params": {
          "scale": null,
          "min_scale": null,
          "level": null
        },
        "root": false,
        "type": "<class 'compyler.cipher_node.PlainNode'>",
        "id": 24
      },
      {
        "depth": 7,
        "value": null,
        "label": "(negate(((... \u00d7 ...) \u00d7 (negate((... \u00d7 ...)) + 2))) + 2)",
        "root": false,
        "type": "<class 'compyler.cipher_node.FreeNode'>",
        "id": 25
      },
      {
        "depth": 5,
        "value": null,
        "label": "((... \u00d7 ...) \u00d7 (negate((... \u00d7 ...)) + 2))",
        "root": false,
        "type": "<class 'compyler.cipher_node.FreeNode'>",
        "id": 26
      },
      {
        "depth": 0,
        "label": "negate",
        "root": false,
        "type": "<class 'compyler.operations.Negation'>",
        "id": 27
      },
      {
        "isexecuted": false,
        "result": null,
        "depth": 0,
        "label": "\u00d7",
        "scale_trick": true,
        "root": false,
        "type": "<class 'compyler.operations.Multiplication'>",
        "id": 28
      },
      {
        "isexecuted": false,
        "result": null,
        "depth": 0,
        "label": "+",
        "root": false,
        "type": "<class 'compyler.operations.Addition'>",
        "id": 29
      },
      {
        "depth": 0,
        "label": "negate",
        "root": false,
        "type": "<class 'compyler.operations.Negation'>",
        "id": 30
      },
      {
        "isexecuted": false,
        "result": null,
        "depth": 0,
        "label": "+",
        "root": false,
        "type": "<class 'compyler.operations.Addition'>",
        "id": 31
      },
      {
        "isexecuted": false,
        "result": null,
        "depth": 0,
        "label": "\u00d7",
        "scale_trick": true,
        "root": false,
        "type": "<class 'compyler.operations.Multiplication'>",
        "id": 32
      },
      {
        "depth": 3,
        "value": null,
        "label": "(((a + 0) \u00d7 (negate((a + 0)) + 2)) \u00d7 (negate(((a + 0) \u00d7 (negate((a + 0)) + 2))) + 2))",
        "root": false,
        "type": "<class 'compyler.cipher_node.FreeNode'>",
        "id": 33
      },
      {
        "depth": 5,
        "value": null,
        "label": "(negate((((a + 0) \u00d7 (negate((a + 0)) + 2)) \u00d7 (negate(((a + 0) \u00d7 (negate((a + 0)) + 2))) + 2))) + 2)",
        "root": false,
        "type": "<class 'compyler.cipher_node.FreeNode'>",
        "id": 34
      },
      {
        "depth": 5,
        "value": null,
        "label": "negate((... \u00d7 ...))",
        "root": false,
        "type": "<class 'compyler.cipher_node.FreeNode'>",
        "id": 35
      },
      {
        "depth": 0,
        "value": 2,
        "label": "2",
        "params": {
          "scale": null,
          "min_scale": null,
          "level": null
        },
        "root": false,
        "type": "<class 'compyler.cipher_node.PlainNode'>",
        "id": 36
      },
      {
        "depth": 6,
        "value": null,
        "label": "negate(((... \u00d7 ...) \u00d7 (negate((... \u00d7 ...)) + 2)))",
        "root": false,
        "type": "<class 'compyler.cipher_node.FreeNode'>",
        "id": 37
      },
      {
        "depth": 0,
        "value": 2,
        "label": "2",
        "params": {
          "scale": null,
          "min_scale": null,
          "level": null
        },
        "root": false,
        "type": "<class 'compyler.cipher_node.PlainNode'>",
        "id": 38
      },
      {
        "depth": 4,
        "value": null,
        "label": "(... \u00d7 ...)",
        "root": false,
        "type": "<class 'compyler.cipher_node.FreeNode'>",
        "id": 39
      },
      {
        "depth": 6,
        "value": null,
        "label": "(negate((... \u00d7 ...)) + 2)",
        "root": false,
        "type": "<class 'compyler.cipher_node.FreeNode'>",
        "id": 40
      },
      {
        "isexecuted": false,
        "result": null,
        "depth": 0,
        "label": "\u00d7",
        "scale_trick": true,
        "root": false,
        "type": "<class 'compyler.operations.Multiplication'>",
        "id": 41
      },
      {
        "isexecuted": false,
        "result": null,
        "depth": 0,
        "label": "+",
        "root": false,
        "type": "<class 'compyler.operations.Addition'>",
        "id": 42
      },
      {
        "depth": 0,
        "label": "negate",
        "root": false,
        "type": "<class 'compyler.operations.Negation'>",
        "id": 43
      },
      {
        "depth": 0,
        "label": "negate",
        "root": false,
        "type": "<class 'compyler.operations.Negation'>",
        "id": 44
      },
      {
        "isexecuted": false,
        "result": null,
        "depth": 0,
        "label": "\u00d7",
        "scale_trick": true,
        "root": false,
        "type": "<class 'compyler.operations.Multiplication'>",
        "id": 45
      },
      {
        "isexecuted": false,
        "result": null,
        "depth": 0,
        "label": "+",
        "root": false,
        "type": "<class 'compyler.operations.Addition'>",
        "id": 46
      },
      {
        "depth": 4,
        "value": null,
        "label": "(negate(((a + 0) \u00d7 (negate((a + 0)) + 2))) + 2)",
        "root": false,
        "type": "<class 'compyler.cipher_node.FreeNode'>",
        "id": 47
      },
      {
        "depth": 2,
        "value": null,
        "label": "((a + 0) \u00d7 (negate((a + 0)) + 2))",
        "root": false,
        "type": "<class 'compyler.cipher_node.FreeNode'>",
        "id": 48
      },
      {
        "depth": 0,
        "value": 2,
        "label": "2",
        "params": {
          "scale": null,
          "min_scale": null,
          "level": null
        },
        "root": false,
        "type": "<class 'compyler.cipher_node.PlainNode'>",
        "id": 49
      },
      {
        "depth": 4,
        "value": null,
        "label": "negate((((a + 0) \u00d7 (negate((a + 0)) + 2)) \u00d7 (negate(((a + 0) \u00d7 (negate((a + 0)) + 2))) + 2)))",
        "root": false,
        "type": "<class 'compyler.cipher_node.FreeNode'>",
        "id": 50
      },
      {
        "depth": 5,
        "value": null,
        "label": "(negate((((a + 0) \u00d7 (negate((a + 0)) + 2)) \u00d7 (negate(((a + 0) \u00d7 (negate((a + 0)) + 2))) + 2))) + 2)",
        "root": false,
        "type": "<class 'compyler.cipher_node.FreeNode'>",
        "id": 51
      },
      {
        "depth": 3,
        "value": null,
        "label": "((negate(a) + 2) \u00d7 (negate(((a + 0) \u00d7 (negate((a + 0)) + 2))) + 2))",
        "root": false,
        "type": "<class 'compyler.cipher_node.FreeNode'>",
        "id": 52
      },
      {
        "depth": 0,
        "value": 2,
        "label": "2",
        "params": {
          "scale": null,
          "min_scale": null,
          "level": null
        },
        "root": false,
        "type": "<class 'compyler.cipher_node.PlainNode'>",
        "id": 53
      },
      {
        "depth": 5,
        "value": null,
        "label": "negate((... \u00d7 ...))",
        "root": false,
        "type": "<class 'compyler.cipher_node.FreeNode'>",
        "id": 54
      },
      {
        "isexecuted": false,
        "result": null,
        "depth": 0,
        "label": "+",
        "root": false,
        "type": "<class 'compyler.operations.Addition'>",
        "id": 55
      },
      {
        "isexecuted": false,
        "result": null,
        "depth": 0,
        "label": "\u00d7",
        "scale_trick": true,
        "root": false,
        "type": "<class 'compyler.operations.Multiplication'>",
        "id": 56
      },
      {
        "depth": 0,
        "label": "negate",
        "root": false,
        "type": "<class 'compyler.operations.Negation'>",
        "id": 57
      },
      {
        "isexecuted": false,
        "result": null,
        "depth": 0,
        "label": "+",
        "root": false,
        "type": "<class 'compyler.operations.Addition'>",
        "id": 58
      },
      {
        "isexecuted": false,
        "result": null,
        "depth": 0,
        "label": "\u00d7",
        "scale_trick": true,
        "root": false,
        "type": "<class 'compyler.operations.Multiplication'>",
        "id": 59
      },
      {
        "depth": 0,
        "label": "negate",
        "root": false,
        "type": "<class 'compyler.operations.Negation'>",
        "id": 60
      },
      {
        "depth": 0,
        "value": 2,
        "label": "2",
        "params": {
          "scale": null,
          "min_scale": null,
          "level": null
        },
        "root": false,
        "type": "<class 'compyler.cipher_node.PlainNode'>",
        "id": 61
      },
      {
        "depth": 3,
        "value": null,
        "label": "negate(((a + 0) \u00d7 (negate((a + 0)) + 2)))",
        "root": false,
        "type": "<class 'compyler.cipher_node.FreeNode'>",
        "id": 62
      },
      {
        "depth": 1,
        "value": null,
        "label": "(a + 0)",
        "root": false,
        "type": "<class 'compyler.cipher_node.FreeNode'>",
        "id": 63
      },
      {
        "depth": 3,
        "value": null,
        "label": "(negate((a + 0)) + 2)",
        "root": false,
        "type": "<class 'compyler.cipher_node.FreeNode'>",
        "id": 64
      },
      {
        "depth": 0,
        "value": 2,
        "label": "2",
        "params": {
          "scale": null,
          "min_scale": null,
          "level": null
        },
        "root": false,
        "type": "<class 'compyler.cipher_node.PlainNode'>",
        "id": 65
      },
      {
        "depth": 4,
        "value": null,
        "label": "negate((((a + 0) \u00d7 (negate((a + 0)) + 2)) \u00d7 (negate(((a + 0) \u00d7 (negate((a + 0)) + 2))) + 2)))",
        "root": false,
        "type": "<class 'compyler.cipher_node.FreeNode'>",
        "id": 66
      },
      {
        "depth": 4,
        "value": null,
        "label": "(negate(((a + 0) \u00d7 (negate((a + 0)) + 2))) + 2)",
        "root": false,
        "type": "<class 'compyler.cipher_node.FreeNode'>",
        "id": 67
      },
      {
        "depth": 2,
        "value": null,
        "label": "(negate(a) + 2)",
        "root": false,
        "type": "<class 'compyler.cipher_node.FreeNode'>",
        "id": 68
      },
      {
        "depth": 0,
        "label": "negate",
        "root": false,
        "type": "<class 'compyler.operations.Negation'>",
        "id": 69
      },
      {
        "isexecuted": false,
        "result": null,
        "depth": 0,
        "label": "+",
        "root": false,
        "type": "<class 'compyler.operations.Addition'>",
        "id": 70
      },
      {
        "isexecuted": false,
        "result": null,
        "depth": 0,
        "label": "+",
        "root": false,
        "type": "<class 'compyler.operations.Addition'>",
        "id": 71
      },
      {
        "depth": 0,
        "label": "negate",
        "root": false,
        "type": "<class 'compyler.operations.Negation'>",
        "id": 72
      },
      {
        "isexecuted": false,
        "result": null,
        "depth": 0,
        "label": "+",
        "root": false,
        "type": "<class 'compyler.operations.Addition'>",
        "id": 73
      },
      {
        "isexecuted": false,
        "result": null,
        "depth": 0,
        "label": "+",
        "root": false,
        "type": "<class 'compyler.operations.Addition'>",
        "id": 74
      },
      {
        "depth": 0,
        "value": null,
        "label": "a",
        "params": {
          "scale": 35,
          "min_scale": 35,
          "level": 1000
        },
        "root": false,
        "type": "<class 'compyler.cipher_node.CipherNode'>",
        "id": 75
      },
      {
        "depth": 0,
        "value": 0,
        "label": "0",
        "params": {
          "scale": null,
          "min_scale": null,
          "level": null
        },
        "root": false,
        "type": "<class 'compyler.cipher_node.PlainNode'>",
        "id": 76
      },
      {
        "depth": 2,
        "value": null,
        "label": "negate((a + 0))",
        "root": false,
        "type": "<class 'compyler.cipher_node.FreeNode'>",
        "id": 77
      },
      {
        "depth": 0,
        "value": 2,
        "label": "2",
        "params": {
          "scale": null,
          "min_scale": null,
          "level": null
        },
        "root": false,
        "type": "<class 'compyler.cipher_node.PlainNode'>",
        "id": 78
      },
      {
        "depth": 0,
        "value": 2,
        "label": "2",
        "params": {
          "scale": null,
          "min_scale": null,
          "level": null
        },
        "root": false,
        "type": "<class 'compyler.cipher_node.PlainNode'>",
        "id": 79
      },
      {
        "depth": 3,
        "value": null,
        "label": "negate(((a + 0) \u00d7 (negate((a + 0)) + 2)))",
        "root": false,
        "type": "<class 'compyler.cipher_node.FreeNode'>",
        "id": 80
      },
      {
        "depth": 1,
        "value": null,
        "label": "negate(a)",
        "root": false,
        "type": "<class 'compyler.cipher_node.FreeNode'>",
        "id": 81
      },
      {
        "depth": 0,
        "value": 2,
        "label": "2",
        "params": {
          "scale": null,
          "min_scale": null,
          "level": null
        },
        "root": false,
        "type": "<class 'compyler.cipher_node.PlainNode'>",
        "id": 82
      },
      {
        "depth": 0,
        "label": "negate",
        "root": false,
        "type": "<class 'compyler.operations.Negation'>",
        "id": 83
      },
      {
        "depth": 0,
        "label": "negate",
        "root": false,
        "type": "<class 'compyler.operations.Negation'>",
        "id": 84
      },
      {
        "depth": 0,
        "label": "negate",
        "root": false,
        "type": "<class 'compyler.operations.Negation'>",
        "id": 85
      }
    ],
    "links": [
      {
        "source": 1,
        "target": 2
      },
      {
        "source": 2,
        "target": 3
      },
      {
        "source": 2,
        "target": 4
      },
      {
        "source": 3,
        "target": 5
      },
      {
        "source": 4,
        "target": 6
      },
      {
        "source": 5,
        "target": 7
      },
      {
        "source": 6,
        "target": 8
      },
      {
        "source": 7,
        "target": 9
      },
      {
        "source": 8,
        "target": 10
      },
      {
        "source": 9,
        "target": 11
      },
      {
        "source": 9,
        "target": 12
      },
      {
        "source": 10,
        "target": 13
      },
      {
        "source": 10,
        "target": 14
      },
      {
        "source": 11,
        "target": 15
      },
      {
        "source": 12,
        "target": 16
      },
      {
        "source": 13,
        "target": 17
      },
      {
        "source": 14,
        "target": 18
      },
      {
        "source": 15,
        "target": 19
      },
      {
        "source": 15,
        "target": 20
      },
      {
        "source": 16,
        "target": 21
      },
      {
        "source": 16,
        "target": 22
      },
      {
        "source": 17,
        "target": 23
      },
      {
        "source": 17,
        "target": 24
      },
      {
        "source": 18,
        "target": 25
      },
      {
        "source": 18,
        "target": 26
      },
      {
        "source": 19,
        "target": 27
      },
      {
        "source": 21,
        "target": 28
      },
      {
        "source": 22,
        "target": 29
      },
      {
        "source": 23,
        "target": 30
      },
      {
        "source": 25,
        "target": 31
      },
      {
        "source": 26,
        "target": 32
      },
      {
        "source": 27,
        "target": 12
      },
      {
        "source": 28,
        "target": 33
      },
      {
        "source": 28,
        "target": 34
      },
      {
        "source": 29,
        "target": 35
      },
      {
        "source": 29,
        "target": 36
      },
      {
        "source": 30,
        "target": 7
      },
      {
        "source": 31,
        "target": 37
      },
      {
        "source": 31,
        "target": 38
      },
      {
        "source": 32,
        "target": 39
      },
      {
        "source": 32,
        "target": 40
      },
      {
        "source": 33,
        "target": 41
      },
      {
        "source": 34,
        "target": 42
      },
      {
        "source": 35,
        "target": 43
      },
      {
        "source": 37,
        "target": 44
      },
      {
        "source": 39,
        "target": 45
      },
      {
        "source": 40,
        "target": 46
      },
      {
        "source": 41,
        "target": 47
      },
      {
        "source": 41,
        "target": 48
      },
      {
        "source": 42,
        "target": 49
      },
      {
        "source": 42,
        "target": 50
      },
      {
        "source": 43,
        "target": 21
      },
      {
        "source": 44,
        "target": 12
      },
      {
        "source": 45,
        "target": 51
      },
      {
        "source": 45,
        "target": 52
      },
      {
        "source": 46,
        "target": 53
      },
      {
        "source": 46,
        "target": 54
      },
      {
        "source": 47,
        "target": 55
      },
      {
        "source": 48,
        "target": 56
      },
      {
        "source": 50,
        "target": 57
      },
      {
        "source": 51,
        "target": 58
      },
      {
        "source": 52,
        "target": 59
      },
      {
        "source": 54,
        "target": 60
      },
      {
        "source": 55,
        "target": 61
      },
      {
        "source": 55,
        "target": 62
      },
      {
        "source": 56,
        "target": 63
      },
      {
        "source": 56,
        "target": 64
      },
      {
        "source": 57,
        "target": 33
      },
      {
        "source": 58,
        "target": 65
      },
      {
        "source": 58,
        "target": 66
      },
      {
        "source": 59,
        "target": 67
      },
      {
        "source": 59,
        "target": 68
      },
      {
        "source": 60,
        "target": 21
      },
      {
        "source": 62,
        "target": 69
      },
      {
        "source": 63,
        "target": 70
      },
      {
        "source": 64,
        "target": 71
      },
      {
        "source": 66,
        "target": 72
      },
      {
        "source": 67,
        "target": 73
      },
      {
        "source": 68,
        "target": 74
      },
      {
        "source": 69,
        "target": 48
      },
      {
        "source": 70,
        "target": 75
      },
      {
        "source": 70,
        "target": 76
      },
      {
        "source": 71,
        "target": 77
      },
      {
        "source": 71,
        "target": 78
      },
      {
        "source": 72,
        "target": 33
      },
      {
        "source": 73,
        "target": 79
      },
      {
        "source": 73,
        "target": 80
      },
      {
        "source": 74,
        "target": 81
      },
      {
        "source": 74,
        "target": 82
      },
      {
        "source": 77,
        "target": 83
      },
      {
        "source": 80,
        "target": 84
      },
      {
        "source": 81,
        "target": 85
      },
      {
        "source": 83,
        "target": 63
      },
      {
        "source": 84,
        "target": 48
      },
      {
        "source": 85,
        "target": 75
      }
    ],
    "topsort": [
      1,
      2,
      3,
      4,
      5,
      6,
      8,
      10,
      13,
      14,
      17,
      18,
      23,
      24,
      25,
      26,
      30,
      31,
      32,
      7,
      37,
      38,
      39,
      40,
      9,
      44,
      45,
      46,
      11,
      51,
      52,
      53,
      54,
      15,
      58,
      59,
      60,
      19,
      20,
      65,
      66,
      67,
      68,
      27,
      72,
      73,
      74,
      12,
      79,
      80,
      81,
      82,
      16,
      84,
      85,
      22,
      29,
      35,
      36,
      43,
      21,
      28,
      34,
      42,
      49,
      50,
      57,
      33,
      41,
      47,
      55,
      61,
      62,
      69,
      48,
      56,
      64,
      71,
      77,
      78,
      83,
      63,
      70,
      75,
      76
    ]
  }