{
  "directed": true,
  "multigraph": false,
  "graph": {},
  "nodes": [
    {
      "depth": 9,
      "value": null,
      "label": "(mean((... \u00d7 ...)) + mean(...))",
      "type": "<class 'compyler.cipher_node.FreeNode'>",
      "root": true,
      "id": 1
    },
    {
      "isexecuted": false,
      "result": null,
      "depth": 0,
      "label": "+",
      "root": false,
      "type": "<class 'compyler.operations.Addition'>",
      "id": 2
    },
    {
      "depth": 8,
      "value": null,
      "label": "mean((... \u00d7 ...))",
      "root": false,
      "type": "<class 'compyler.cipher_node.FreeNode'>",
      "id": 3
    },
    {
      "depth": 7,
      "value": null,
      "label": "mean(...)",
      "root": false,
      "type": "<class 'compyler.cipher_node.FreeNode'>",
      "id": 4
    },
    {
      "depth": 0,
      "label": "mean",
      "root": false,
      "type": "<class 'compyler.operations.Mean'>",
      "id": 5
    },
    {
      "depth": 0,
      "label": "mean",
      "root": false,
      "type": "<class 'compyler.operations.Mean'>",
      "id": 6
    },
    {
      "depth": 7,
      "value": null,
      "label": "(... \u00d7 ...)",
      "root": false,
      "type": "<class 'compyler.cipher_node.FreeNode'>",
      "id": 7
    },
    {
      "depth": 6,
      "value": null,
      "label": "(((... \u00d7 ...) \u00d7 (negate((... \u00d7 ...)) + 2)) \u00d7 (negate(((... \u00d7 ...) \u00d7 (negate((... \u00d7 ...)) + 2))) + 2))",
      "root": false,
      "type": "<class 'compyler.cipher_node.FreeNode'>",
      "id": 8
    },
    {
      "isexecuted": false,
      "result": null,
      "depth": 0,
      "label": "\u00d7",
      "scale_trick": true,
      "root": false,
      "type": "<class 'compyler.operations.Multiplication'>",
      "id": 9
    },
    {
      "isexecuted": false,
      "result": null,
      "depth": 0,
      "label": "\u00d7",
      "scale_trick": true,
      "root": false,
      "type": "<class 'compyler.operations.Multiplication'>",
      "id": 10
    },
    {
      "depth": 6,
      "value": null,
      "label": "(((... \u00d7 ...) \u00d7 (negate((... \u00d7 ...)) + 2)) \u00d7 (negate(((... \u00d7 ...) \u00d7 (negate((... \u00d7 ...)) + 2))) + 2))",
      "root": false,
      "type": "<class 'compyler.cipher_node.FreeNode'>",
      "id": 11
    },
    {
      "depth": 8,
      "value": null,
      "label": "(negate(...) + 2)",
      "root": false,
      "type": "<class 'compyler.cipher_node.FreeNode'>",
      "id": 12
    },
    {
      "depth": 7,
      "value": null,
      "label": "(negate(((... \u00d7 ...) \u00d7 (negate((... \u00d7 ...)) + 2))) + 2)",
      "root": false,
      "type": "<class 'compyler.cipher_node.FreeNode'>",
      "id": 13
    },
    {
      "depth": 5,
      "value": null,
      "label": "((... \u00d7 ...) \u00d7 (negate((... \u00d7 ...)) + 2))",
      "root": false,
      "type": "<class 'compyler.cipher_node.FreeNode'>",
      "id": 14
    },
    {
      "isexecuted": false,
      "result": null,
      "depth": 0,
      "label": "\u00d7",
      "scale_trick": true,
      "root": false,
      "type": "<class 'compyler.operations.Multiplication'>",
      "id": 15
    },
    {
      "isexecuted": false,
      "result": null,
      "depth": 0,
      "label": "+",
      "root": false,
      "type": "<class 'compyler.operations.Addition'>",
      "id": 16
    },
    {
      "isexecuted": false,
      "result": null,
      "depth": 0,
      "label": "+",
      "root": false,
      "type": "<class 'compyler.operations.Addition'>",
      "id": 17
    },
    {
      "isexecuted": false,
      "result": null,
      "depth": 0,
      "label": "\u00d7",
      "scale_trick": true,
      "root": false,
      "type": "<class 'compyler.operations.Multiplication'>",
      "id": 18
    },
    {
      "depth": 5,
      "value": null,
      "label": "((... \u00d7 ...) \u00d7 (negate((... \u00d7 ...)) + 2))",
      "root": false,
      "type": "<class 'compyler.cipher_node.FreeNode'>",
      "id": 19
    },
    {
      "depth": 7,
      "value": null,
      "label": "(negate(((... \u00d7 ...) \u00d7 (negate((... \u00d7 ...)) + 2))) + 2)",
      "root": false,
      "type": "<class 'compyler.cipher_node.FreeNode'>",
      "id": 20
    },
    {
      "depth": 7,
      "value": null,
      "label": "negate(...)",
      "root": false,
      "type": "<class 'compyler.cipher_node.FreeNode'>",
      "id": 21
    },
    {
      "depth": 0,
      "value": 2,
      "label": "2",
      "params": {
        "scale": null,
        "min_scale": null,
        "level": null
      },
      "root": false,
      "type": "<class 'compyler.cipher_node.PlainNode'>",
      "id": 22
    },
    {
      "depth": 0,
      "value": 2,
      "label": "2",
      "params": {
        "scale": null,
        "min_scale": null,
        "level": null
      },
      "root": false,
      "type": "<class 'compyler.cipher_node.PlainNode'>",
      "id": 23
    },
    {
      "depth": 6,
      "value": null,
      "label": "negate(((... \u00d7 ...) \u00d7 (negate((... \u00d7 ...)) + 2)))",
      "root": false,
      "type": "<class 'compyler.cipher_node.FreeNode'>",
      "id": 24
    },
    {
      "depth": 4,
      "value": null,
      "label": "(... \u00d7 ...)",
      "root": false,
      "type": "<class 'compyler.cipher_node.FreeNode'>",
      "id": 25
    },
    {
      "depth": 6,
      "value": null,
      "label": "(negate((... \u00d7 ...)) + 2)",
      "root": false,
      "type": "<class 'compyler.cipher_node.FreeNode'>",
      "id": 26
    },
    {
      "isexecuted": false,
      "result": null,
      "depth": 0,
      "label": "\u00d7",
      "scale_trick": true,
      "root": false,
      "type": "<class 'compyler.operations.Multiplication'>",
      "id": 27
    },
    {
      "isexecuted": false,
      "result": null,
      "depth": 0,
      "label": "+",
      "root": false,
      "type": "<class 'compyler.operations.Addition'>",
      "id": 28
    },
    {
      "depth": 0,
      "label": "negate",
      "root": false,
      "type": "<class 'compyler.operations.Negation'>",
      "id": 29
    },
    {
      "depth": 0,
      "label": "negate",
      "root": false,
      "type": "<class 'compyler.operations.Negation'>",
      "id": 30
    },
    {
      "isexecuted": false,
      "result": null,
      "depth": 0,
      "label": "\u00d7",
      "scale_trick": true,
      "root": false,
      "type": "<class 'compyler.operations.Multiplication'>",
      "id": 31
    },
    {
      "isexecuted": false,
      "result": null,
      "depth": 0,
      "label": "+",
      "root": false,
      "type": "<class 'compyler.operations.Addition'>",
      "id": 32
    },
    {
      "depth": 4,
      "value": null,
      "label": "(... \u00d7 ...)",
      "root": false,
      "type": "<class 'compyler.cipher_node.FreeNode'>",
      "id": 33
    },
    {
      "depth": 6,
      "value": null,
      "label": "(negate((... \u00d7 ...)) + 2)",
      "root": false,
      "type": "<class 'compyler.cipher_node.FreeNode'>",
      "id": 34
    },
    {
      "depth": 0,
      "value": 2,
      "label": "2",
      "params": {
        "scale": null,
        "min_scale": null,
        "level": null
      },
      "root": false,
      "type": "<class 'compyler.cipher_node.PlainNode'>",
      "id": 35
    },
    {
      "depth": 6,
      "value": null,
      "label": "negate(((... \u00d7 ...) \u00d7 (negate((... \u00d7 ...)) + 2)))",
      "root": false,
      "type": "<class 'compyler.cipher_node.FreeNode'>",
      "id": 36
    },
    {
      "depth": 3,
      "value": null,
      "label": "(((a + 0) \u00d7 (negate((a + 0)) + 2)) \u00d7 (negate(((a + 0) \u00d7 (negate((a + 0)) + 2))) + 2))",
      "root": false,
      "type": "<class 'compyler.cipher_node.FreeNode'>",
      "id": 37
    },
    {
      "depth": 5,
      "value": null,
      "label": "(negate((((a + 0) \u00d7 (negate((a + 0)) + 2)) \u00d7 (negate(((a + 0) \u00d7 (negate((a + 0)) + 2))) + 2))) + 2)",
      "root": false,
      "type": "<class 'compyler.cipher_node.FreeNode'>",
      "id": 38
    },
    {
      "depth": 5,
      "value": null,
      "label": "negate((... \u00d7 ...))",
      "root": false,
      "type": "<class 'compyler.cipher_node.FreeNode'>",
      "id": 39
    },
    {
      "depth": 0,
      "value": 2,
      "label": "2",
      "params": {
        "scale": null,
        "min_scale": null,
        "level": null
      },
      "root": false,
      "type": "<class 'compyler.cipher_node.PlainNode'>",
      "id": 40
    },
    {
      "isexecuted": false,
      "result": null,
      "depth": 0,
      "label": "\u00d7",
      "scale_trick": true,
      "root": false,
      "type": "<class 'compyler.operations.Multiplication'>",
      "id": 41
    },
    {
      "isexecuted": false,
      "result": null,
      "depth": 0,
      "label": "+",
      "root": false,
      "type": "<class 'compyler.operations.Addition'>",
      "id": 42
    },
    {
      "depth": 0,
      "label": "negate",
      "root": false,
      "type": "<class 'compyler.operations.Negation'>",
      "id": 43
    },
    {
      "isexecuted": false,
      "result": null,
      "depth": 0,
      "label": "\u00d7",
      "scale_trick": true,
      "root": false,
      "type": "<class 'compyler.operations.Multiplication'>",
      "id": 44
    },
    {
      "isexecuted": false,
      "result": null,
      "depth": 0,
      "label": "+",
      "root": false,
      "type": "<class 'compyler.operations.Addition'>",
      "id": 45
    },
    {
      "depth": 0,
      "label": "negate",
      "root": false,
      "type": "<class 'compyler.operations.Negation'>",
      "id": 46
    },
    {
      "depth": 3,
      "value": null,
      "label": "((negate(a) + 2) \u00d7 (negate(((a + 0) \u00d7 (negate((a + 0)) + 2))) + 2))",
      "root": false,
      "type": "<class 'compyler.cipher_node.FreeNode'>",
      "id": 47
    },
    {
      "depth": 5,
      "value": null,
      "label": "(negate((((a + 0) \u00d7 (negate((a + 0)) + 2)) \u00d7 (negate(((a + 0) \u00d7 (negate((a + 0)) + 2))) + 2))) + 2)",
      "root": false,
      "type": "<class 'compyler.cipher_node.FreeNode'>",
      "id": 48
    },
    {
      "depth": 5,
      "value": null,
      "label": "negate((... \u00d7 ...))",
      "root": false,
      "type": "<class 'compyler.cipher_node.FreeNode'>",
      "id": 49
    },
    {
      "depth": 0,
      "value": 2,
      "label": "2",
      "params": {
        "scale": null,
        "min_scale": null,
        "level": null
      },
      "root": false,
      "type": "<class 'compyler.cipher_node.PlainNode'>",
      "id": 50
    },
    {
      "depth": 4,
      "value": null,
      "label": "(negate(((a + 0) \u00d7 (negate((a + 0)) + 2))) + 2)",
      "root": false,
      "type": "<class 'compyler.cipher_node.FreeNode'>",
      "id": 51
    },
    {
      "depth": 2,
      "value": null,
      "label": "((a + 0) \u00d7 (negate((a + 0)) + 2))",
      "root": false,
      "type": "<class 'compyler.cipher_node.FreeNode'>",
      "id": 52
    },
    {
      "depth": 4,
      "value": null,
      "label": "negate((((a + 0) \u00d7 (negate((a + 0)) + 2)) \u00d7 (negate(((a + 0) \u00d7 (negate((a + 0)) + 2))) + 2)))",
      "root": false,
      "type": "<class 'compyler.cipher_node.FreeNode'>",
      "id": 53
    },
    {
      "depth": 0,
      "value": 2,
      "label": "2",
      "params": {
        "scale": null,
        "min_scale": null,
        "level": null
      },
      "root": false,
      "type": "<class 'compyler.cipher_node.PlainNode'>",
      "id": 54
    },
    {
      "isexecuted": false,
      "result": null,
      "depth": 0,
      "label": "\u00d7",
      "scale_trick": true,
      "root": false,
      "type": "<class 'compyler.operations.Multiplication'>",
      "id": 55
    },
    {
      "isexecuted": false,
      "result": null,
      "depth": 0,
      "label": "+",
      "root": false,
      "type": "<class 'compyler.operations.Addition'>",
      "id": 56
    },
    {
      "depth": 0,
      "label": "negate",
      "root": false,
      "type": "<class 'compyler.operations.Negation'>",
      "id": 57
    },
    {
      "isexecuted": false,
      "result": null,
      "depth": 0,
      "label": "+",
      "root": false,
      "type": "<class 'compyler.operations.Addition'>",
      "id": 58
    },
    {
      "isexecuted": false,
      "result": null,
      "depth": 0,
      "label": "\u00d7",
      "scale_trick": true,
      "root": false,
      "type": "<class 'compyler.operations.Multiplication'>",
      "id": 59
    },
    {
      "depth": 0,
      "label": "negate",
      "root": false,
      "type": "<class 'compyler.operations.Negation'>",
      "id": 60
    },
    {
      "depth": 2,
      "value": null,
      "label": "(negate(a) + 2)",
      "root": false,
      "type": "<class 'compyler.cipher_node.FreeNode'>",
      "id": 61
    },
    {
      "depth": 4,
      "value": null,
      "label": "(negate(((a + 0) \u00d7 (negate((a + 0)) + 2))) + 2)",
      "root": false,
      "type": "<class 'compyler.cipher_node.FreeNode'>",
      "id": 62
    },
    {
      "depth": 0,
      "value": 2,
      "label": "2",
      "params": {
        "scale": null,
        "min_scale": null,
        "level": null
      },
      "root": false,
      "type": "<class 'compyler.cipher_node.PlainNode'>",
      "id": 63
    },
    {
      "depth": 4,
      "value": null,
      "label": "negate((((a + 0) \u00d7 (negate((a + 0)) + 2)) \u00d7 (negate(((a + 0) \u00d7 (negate((a + 0)) + 2))) + 2)))",
      "root": false,
      "type": "<class 'compyler.cipher_node.FreeNode'>",
      "id": 64
    },
    {
      "depth": 0,
      "value": 2,
      "label": "2",
      "params": {
        "scale": null,
        "min_scale": null,
        "level": null
      },
      "root": false,
      "type": "<class 'compyler.cipher_node.PlainNode'>",
      "id": 65
    },
    {
      "depth": 3,
      "value": null,
      "label": "negate(((a + 0) \u00d7 (negate((a + 0)) + 2)))",
      "root": false,
      "type": "<class 'compyler.cipher_node.FreeNode'>",
      "id": 66
    },
    {
      "depth": 3,
      "value": null,
      "label": "(negate((a + 0)) + 2)",
      "root": false,
      "type": "<class 'compyler.cipher_node.FreeNode'>",
      "id": 67
    },
    {
      "depth": 1,
      "value": null,
      "label": "(a + 0)",
      "root": false,
      "type": "<class 'compyler.cipher_node.FreeNode'>",
      "id": 68
    },
    {
      "isexecuted": false,
      "result": null,
      "depth": 0,
      "label": "+",
      "root": false,
      "type": "<class 'compyler.operations.Addition'>",
      "id": 69
    },
    {
      "isexecuted": false,
      "result": null,
      "depth": 0,
      "label": "+",
      "root": false,
      "type": "<class 'compyler.operations.Addition'>",
      "id": 70
    },
    {
      "depth": 0,
      "label": "negate",
      "root": false,
      "type": "<class 'compyler.operations.Negation'>",
      "id": 71
    },
    {
      "depth": 0,
      "label": "negate",
      "root": false,
      "type": "<class 'compyler.operations.Negation'>",
      "id": 72
    },
    {
      "isexecuted": false,
      "result": null,
      "depth": 0,
      "label": "+",
      "root": false,
      "type": "<class 'compyler.operations.Addition'>",
      "id": 73
    },
    {
      "isexecuted": false,
      "result": null,
      "depth": 0,
      "label": "+",
      "root": false,
      "type": "<class 'compyler.operations.Addition'>",
      "id": 74
    },
    {
      "depth": 0,
      "value": 2,
      "label": "2",
      "params": {
        "scale": null,
        "min_scale": null,
        "level": null
      },
      "root": false,
      "type": "<class 'compyler.cipher_node.PlainNode'>",
      "id": 75
    },
    {
      "depth": 1,
      "value": null,
      "label": "negate(a)",
      "root": false,
      "type": "<class 'compyler.cipher_node.FreeNode'>",
      "id": 76
    },
    {
      "depth": 3,
      "value": null,
      "label": "negate(((a + 0) \u00d7 (negate((a + 0)) + 2)))",
      "root": false,
      "type": "<class 'compyler.cipher_node.FreeNode'>",
      "id": 77
    },
    {
      "depth": 0,
      "value": 2,
      "label": "2",
      "params": {
        "scale": null,
        "min_scale": null,
        "level": null
      },
      "root": false,
      "type": "<class 'compyler.cipher_node.PlainNode'>",
      "id": 78
    },
    {
      "depth": 0,
      "value": 2,
      "label": "2",
      "params": {
        "scale": null,
        "min_scale": null,
        "level": null
      },
      "root": false,
      "type": "<class 'compyler.cipher_node.PlainNode'>",
      "id": 79
    },
    {
      "depth": 2,
      "value": null,
      "label": "negate((a + 0))",
      "root": false,
      "type": "<class 'compyler.cipher_node.FreeNode'>",
      "id": 80
    },
    {
      "depth": 0,
      "value": 0,
      "label": "0",
      "params": {
        "scale": null,
        "min_scale": null,
        "level": null
      },
      "root": false,
      "type": "<class 'compyler.cipher_node.PlainNode'>",
      "id": 81
    },
    {
      "depth": 0,
      "value": null,
      "label": "a",
      "params": {
        "scale": 40,
        "min_scale": 40,
        "level": 1000
      },
      "root": false,
      "type": "<class 'compyler.cipher_node.CipherNode'>",
      "id": 82
    },
    {
      "depth": 0,
      "label": "negate",
      "root": false,
      "type": "<class 'compyler.operations.Negation'>",
      "id": 83
    },
    {
      "depth": 0,
      "label": "negate",
      "root": false,
      "type": "<class 'compyler.operations.Negation'>",
      "id": 84
    },
    {
      "depth": 0,
      "label": "negate",
      "root": false,
      "type": "<class 'compyler.operations.Negation'>",
      "id": 85
    }
  ],
  "links": [
    {
      "source": 1,
      "target": 2
    },
    {
      "source": 2,
      "target": 3
    },
    {
      "source": 2,
      "target": 4
    },
    {
      "source": 3,
      "target": 5
    },
    {
      "source": 4,
      "target": 6
    },
    {
      "source": 5,
      "target": 7
    },
    {
      "source": 6,
      "target": 8
    },
    {
      "source": 7,
      "target": 9
    },
    {
      "source": 8,
      "target": 10
    },
    {
      "source": 9,
      "target": 11
    },
    {
      "source": 9,
      "target": 12
    },
    {
      "source": 10,
      "target": 13
    },
    {
      "source": 10,
      "target": 14
    },
    {
      "source": 11,
      "target": 15
    },
    {
      "source": 12,
      "target": 16
    },
    {
      "source": 13,
      "target": 17
    },
    {
      "source": 14,
      "target": 18
    },
    {
      "source": 15,
      "target": 19
    },
    {
      "source": 15,
      "target": 20
    },
    {
      "source": 16,
      "target": 21
    },
    {
      "source": 16,
      "target": 22
    },
    {
      "source": 17,
      "target": 23
    },
    {
      "source": 17,
      "target": 24
    },
    {
      "source": 18,
      "target": 25
    },
    {
      "source": 18,
      "target": 26
    },
    {
      "source": 19,
      "target": 27
    },
    {
      "source": 20,
      "target": 28
    },
    {
      "source": 21,
      "target": 29
    },
    {
      "source": 24,
      "target": 30
    },
    {
      "source": 25,
      "target": 31
    },
    {
      "source": 26,
      "target": 32
    },
    {
      "source": 27,
      "target": 33
    },
    {
      "source": 27,
      "target": 34
    },
    {
      "source": 28,
      "target": 35
    },
    {
      "source": 28,
      "target": 36
    },
    {
      "source": 29,
      "target": 8
    },
    {
      "source": 30,
      "target": 14
    },
    {
      "source": 31,
      "target": 37
    },
    {
      "source": 31,
      "target": 38
    },
    {
      "source": 32,
      "target": 39
    },
    {
      "source": 32,
      "target": 40
    },
    {
      "source": 33,
      "target": 41
    },
    {
      "source": 34,
      "target": 42
    },
    {
      "source": 36,
      "target": 43
    },
    {
      "source": 37,
      "target": 44
    },
    {
      "source": 38,
      "target": 45
    },
    {
      "source": 39,
      "target": 46
    },
    {
      "source": 41,
      "target": 47
    },
    {
      "source": 41,
      "target": 48
    },
    {
      "source": 42,
      "target": 49
    },
    {
      "source": 42,
      "target": 50
    },
    {
      "source": 43,
      "target": 14
    },
    {
      "source": 44,
      "target": 51
    },
    {
      "source": 44,
      "target": 52
    },
    {
      "source": 45,
      "target": 53
    },
    {
      "source": 45,
      "target": 54
    },
    {
      "source": 46,
      "target": 25
    },
    {
      "source": 47,
      "target": 55
    },
    {
      "source": 48,
      "target": 56
    },
    {
      "source": 49,
      "target": 57
    },
    {
      "source": 51,
      "target": 58
    },
    {
      "source": 52,
      "target": 59
    },
    {
      "source": 53,
      "target": 60
    },
    {
      "source": 55,
      "target": 61
    },
    {
      "source": 55,
      "target": 62
    },
    {
      "source": 56,
      "target": 63
    },
    {
      "source": 56,
      "target": 64
    },
    {
      "source": 57,
      "target": 25
    },
    {
      "source": 58,
      "target": 65
    },
    {
      "source": 58,
      "target": 66
    },
    {
      "source": 59,
      "target": 67
    },
    {
      "source": 59,
      "target": 68
    },
    {
      "source": 60,
      "target": 37
    },
    {
      "source": 61,
      "target": 69
    },
    {
      "source": 62,
      "target": 70
    },
    {
      "source": 64,
      "target": 71
    },
    {
      "source": 66,
      "target": 72
    },
    {
      "source": 67,
      "target": 73
    },
    {
      "source": 68,
      "target": 74
    },
    {
      "source": 69,
      "target": 75
    },
    {
      "source": 69,
      "target": 76
    },
    {
      "source": 70,
      "target": 77
    },
    {
      "source": 70,
      "target": 78
    },
    {
      "source": 71,
      "target": 37
    },
    {
      "source": 72,
      "target": 52
    },
    {
      "source": 73,
      "target": 79
    },
    {
      "source": 73,
      "target": 80
    },
    {
      "source": 74,
      "target": 81
    },
    {
      "source": 74,
      "target": 82
    },
    {
      "source": 76,
      "target": 83
    },
    {
      "source": 77,
      "target": 84
    },
    {
      "source": 80,
      "target": 85
    },
    {
      "source": 83,
      "target": 82
    },
    {
      "source": 84,
      "target": 52
    },
    {
      "source": 85,
      "target": 68
    }
  ],
  "topsort": [
    1,
    2,
    3,
    4,
    5,
    6,
    7,
    9,
    11,
    12,
    15,
    16,
    19,
    20,
    21,
    22,
    27,
    28,
    29,
    33,
    34,
    35,
    36,
    8,
    41,
    42,
    43,
    10,
    47,
    48,
    49,
    50,
    13,
    55,
    56,
    57,
    17,
    61,
    62,
    63,
    64,
    23,
    24,
    69,
    70,
    71,
    30,
    75,
    76,
    77,
    78,
    14,
    83,
    84,
    18,
    26,
    32,
    39,
    40,
    46,
    25,
    31,
    38,
    45,
    53,
    54,
    60,
    37,
    44,
    51,
    58,
    65,
    66,
    72,
    52,
    59,
    67,
    73,
    79,
    80,
    85,
    68,
    74,
    81,
    82
  ]
}